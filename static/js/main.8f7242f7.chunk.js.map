{"version":3,"sources":["redux/types.js","redux/loadDataCoinsReducer.js","redux/loadDataCoinsCourseHistoryReducer.js","redux/rootReducer.js","Menu/Menu.jsx","Menu/MenuIcon/Icons.svg","Menu/MenuIcon/MenuIcons.jsx","untility/Consts.jsx","img/messagesIcon.svg","img/notificationIcon.svg","overViewContent/img/coins/CoinIcons.svg","overViewContent/img/coins/CoinsIcons.jsx","overViewContent/coinsContent/coinsItem/CoinsItem.jsx","overViewContent/coinsContent/CoinsContent.jsx","overViewContent/recentNews/RecentNews.jsx","Charts/ChartDonutBalance.jsx","Charts/ChartLineSpending.jsx","Charts/ChartLineMarketPrice.jsx","overViewContent/OverViewContent.jsx","App.jsx","redux/actions.js","index.jsx"],"names":["LOAD_DATA_COINS","LOAD_DATA_COINS_COURSE_HISTORY","initialState","dataCoins","dataCoinsHistory","rootReducer","combineReducers","loadDataCoinsReducer","state","action","type","dataCoinsNew","data","map","res","id","name","symbol","priceUsd","current_price","loadDataCoinsCourseHistoryReducer","date","Menu","props","useState","active","setActive","className","menuItem","item","index","onClick","itemSvg","href","itemName","Icons","color","size","fill","stroke","width","height","xlinkHref","IconsSVG","colors","Date","day","month","years","chartNavCoins","usersCoins","balance","coin","value","chartNavYear","year","chartNavMonth","chartCoins","CoinsIcons","CoinsContent","user","dataUsersCoins","JSON","parse","stringify","sortDataCost","costUsd","costUsdOneCoin","btcPrice","DataCost","setNewDataCost","useEffect","btcPriceUsd","prop","coinName","usdPrice","Math","floor","quantity","users","Users","dataCoinsChart","dataChart","slice","sort","a","b","CoinsItem","RecentNews","ChartDonutBalance","costCoins","chartBalance","setChartBalance","sumCoins","reduce","push","ResponsiveContainer","PieChart","Pie","dataKey","cx","cy","innerRadius","outerRadius","entry","Cell","length","Label","content","x","y","dy","textAnchor","Legend","style","ceil","wrapperStyle","position","ChartLineSpending","SpendingJson","spendings","spending","LineChart","Tooltip","cursor","payload","Line","strokeWidth","dot","XAxis","interval","padding","left","right","axisLine","tickLine","Brush","startIndex","endIndex","travellerWidth","ChartLineMarketPrice","dataCoinsCourseHistory","newChart","setDataChart","selectedCoinChart","setSelectedCoinChart","getMonth","valueMonth","setValueMonth","valueYear","setValueYear","dayChart","dateFormat","dateChart","monthChart","yearChart","onChange","event","target","YAxis","domain","OverViewContent","getDate","getDay","App","useSelector","dispatch","useDispatch","fetch","response","json","jsonData","prices","open","setOpen","viewBox","xmlns","d","method","placeholder","src","MessagesIcon","alt","NotificationIcon","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f7242f7.chunk.js","sourcesContent":["export const LOAD_DATA_COINS = 'LOAD_DATA_COINS';\r\n\r\nexport const LOAD_DATA_COINS_COURSE_HISTORY = 'LOAD_DATA_COINS_COURSE_HISTORY';","import {\r\n    LOAD_DATA_COINS\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    dataCoins: []\r\n}\r\n\r\nexport const loadDataCoinsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOAD_DATA_COINS:\r\n            const dataCoinsNew = action.data.map(res => {\r\n                return {\r\n                    id: res.id,\r\n                    name: res.name,\r\n                    symbol: res.symbol,\r\n                    priceUsd: res.current_price\r\n                };\r\n            })\r\n            return {\r\n                ...state,\r\n                dataCoins: dataCoinsNew\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    LOAD_DATA_COINS_COURSE_HISTORY\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    dataCoinsHistory: []\r\n}\r\n\r\nexport const loadDataCoinsCourseHistoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOAD_DATA_COINS_COURSE_HISTORY:\r\n            const dataCoinsNew = action.data.map(res => {\r\n                return {\r\n                    date: res[0],\r\n                    priceUsd: res[1]\r\n                };\r\n            })\r\n            return {\r\n                ...state,\r\n                dataCoinsHistory: dataCoinsNew\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { loadDataCoinsReducer } from \"./loadDataCoinsReducer\";\r\nimport { loadDataCoinsCourseHistoryReducer } from \"./loadDataCoinsCourseHistoryReducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    loadDataCoinsReducer,\r\n    loadDataCoinsCourseHistoryReducer\r\n});","import React, { useState } from 'react'\r\nimport './Menu.css'\r\n\r\nfunction Menu(props) {\r\n  const [active, setActive] = useState(0)\r\n\r\n  return (\r\n    <ul className='menu_list'>\r\n      {props.menuItem.map((item, index) => {\r\n        return (\r\n          <li key={index} className={`menu_item ${active === index ? 'active' : ''}`} onClick={() => setActive(index)}>\r\n            {item.itemSvg}\r\n            <a href='/'>\r\n              {item.itemName}\r\n            </a>\r\n            <hr />\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","export default __webpack_public_path__ + \"static/media/Icons.ebef1605.svg\";","import React from 'react';\r\nimport IconsSVG from './Icons.svg'\r\n\r\nfunction Icons({ name, color, size, className }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name} ${className}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icons;","import Icons from '../Menu/MenuIcon/MenuIcons';\r\nimport usersCoins from '../json/userBalance.json'\r\n\r\nconst colors = ['#018FFF', '#FAD679', '#F5FBFE']\r\n\r\nconst date = new Date()\r\nconst day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\nconst month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\nconst years = ['2020', '2021']\r\n\r\nconst chartNavCoins = usersCoins.balance.map((coin, index) => {\r\n    return (\r\n        <option key={`item-${index}`} value={coin.name}>{coin.name}</option>\r\n    )\r\n})\r\n\r\nconst chartNavYear = years.map((year, index) => {\r\n    return (\r\n        <option key={`item-${index}`} value={year}>{year}</option>\r\n    )\r\n})\r\n\r\nconst chartNavMonth = month.map((month, index) => {\r\n    return (\r\n        <option key={`item-${index}`} value={month}>{month}</option>\r\n    )\r\n})\r\n\r\nconst chartCoins = chartNavCoins.map(coin => {\r\n    return (\r\n        coin.props.value\r\n    )\r\n})\r\n\r\nconst menuItem = [{\r\n    id: 1,\r\n    itemName: 'Overview',\r\n    itemSvg: < Icons name='overview'\r\n        className='overviewIcon' />\r\n},\r\n{\r\n    id: 2,\r\n    itemName: 'Wallets',\r\n    itemSvg: < Icons name='wallets'\r\n        className='walletsIcon' />\r\n},\r\n{\r\n    id: 3,\r\n    itemName: 'Transictions',\r\n    itemSvg: < Icons name='transictions'\r\n        className='transictionsIcon' />\r\n},\r\n{\r\n    id: 4,\r\n    itemName: 'Exchange',\r\n    itemSvg: < Icons name='exchange'\r\n        className='exchangeIcon' />\r\n},\r\n{\r\n    id: 5,\r\n    itemName: 'Market',\r\n    itemSvg: < Icons name='market'\r\n        className='marketIcon' />\r\n},\r\n]\r\n\r\nexport { colors, date, day, month, years, menuItem, chartNavCoins, chartCoins, chartNavYear, chartNavMonth }","export default __webpack_public_path__ + \"static/media/messagesIcon.aa3e86f8.svg\";","export default __webpack_public_path__ + \"static/media/notificationIcon.44b9138d.svg\";","export default __webpack_public_path__ + \"static/media/CoinIcons.325965be.svg\";","import React from 'react';\r\nimport IconsSVG from './CoinIcons.svg'\r\n\r\nfunction CoinsIcons({ name, color, size }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default CoinsIcons;","import React, { useState, useEffect } from 'react'\r\nimport CoinsIcons from '../../img/coins/CoinsIcons'\r\n\r\nfunction CoinsContent({ user, dataCoins }) {\r\n    const dataUsersCoins = JSON.parse(JSON.stringify(user))\r\n    let sortDataCost = {\r\n        name: '',\r\n        symbol: '',\r\n        costUsd: 0,\r\n        costUsdOneCoin: 0,\r\n        btcPrice: 0\r\n    }\r\n\r\n    const [DataCost, setNewDataCost] = useState(sortDataCost)\r\n\r\n    useEffect(() => {\r\n        let btcPriceUsd = 0\r\n        for (let prop in dataCoins) {\r\n            const coinName = dataCoins[prop].name\r\n            const usdPrice = dataCoins[prop].priceUsd\r\n            const symbol = dataCoins[prop].symbol\r\n\r\n            if (coinName === 'Bitcoin') {\r\n                btcPriceUsd = usdPrice\r\n            }\r\n            if (coinName === dataUsersCoins.name) {\r\n                sortDataCost.name = coinName\r\n                sortDataCost.symbol = symbol\r\n                sortDataCost.costUsd = Math.floor(dataUsersCoins.quantity * usdPrice * 100) / 100\r\n                sortDataCost.costUsdOneCoin = Math.floor(usdPrice * 100) / 100\r\n                sortDataCost.btcPrice = Math.floor(usdPrice / btcPriceUsd * 100000) / 100000\r\n            }\r\n        }\r\n        setNewDataCost(sortDataCost)\r\n    }, [dataCoins])\r\n\r\n    return (\r\n        <div className='wrapper_coin'>\r\n            <div className='wrapper_coin_content_left'>\r\n                <p>{user.name} </p>\r\n                <div className='coin'>\r\n                    <div className='coin_two'>\r\n                        <CoinsIcons name={user.name} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='wrapper_coin_content_center'>\r\n                <p>{user.quantity} {DataCost.symbol}</p>\r\n                <p>{DataCost.costUsd} $</p>\r\n            </div>\r\n            <div className='wrapper_coin_content_right'>\r\n                <p>1 {DataCost.symbol} = {DataCost.costUsdOneCoin} $</p>\r\n                <p>1 {DataCost.symbol} = {DataCost.btcPrice} BTC</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\nimport CoinsItem from './coinsItem/CoinsItem'\r\n\r\nfunction CoinsContent(props) {\r\n  const users = JSON.parse(JSON.stringify(props.Users.balance))\r\n  const dataCoins = props.dataCoinsChart\r\n  const dataChart = users\r\n    .slice()\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 4)\r\n\r\n  return (\r\n    <div className='wrapper_coins'>\r\n      {\r\n        dataChart.map(user => {\r\n          return (\r\n            <CoinsItem user={user} key={user.id} dataCoins={dataCoins} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\n\r\nfunction RecentNews() {\r\n  return (\r\n    <div className='wrapper_news_content'>\r\n      <p>19 hours ago</p>\r\n      <p>SEC Fails to Show Court Blockvest Tokens Are Securities</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentNews","import React, { useEffect, useState } from 'react'\r\nimport { colors } from '../untility/Consts'\r\nimport { PieChart, Pie, Cell, Legend, ResponsiveContainer, Label } from 'recharts';\r\n\r\nfunction ChartDonutBalance(props) {\r\n  const costCoins = []\r\n  const [chartBalance, setChartBalance] = useState()\r\n\r\n  const users = JSON.parse(JSON.stringify(props.Users.balance))\r\n  const sumCoins = users.reduce((a, b) => a + b.quantity, 0)\r\n\r\n  const dataCoins = props.dataCoinsChart\r\n\r\n  const dataChart = users\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 3)\r\n\r\n  useEffect(() => {\r\n    for (let prop in dataCoins) {\r\n      const coinName = dataCoins[prop].name\r\n      const usdPrice = dataCoins[prop].priceUsd\r\n      for (let prop in users) {\r\n        if (coinName === users[prop].name) {\r\n          costCoins.push(usdPrice * users[prop].quantity)\r\n        }\r\n      }\r\n    }\r\n    setChartBalance(Math.floor(costCoins.reduce((a, b) => a + b, 0) * 100) / 100)\r\n  }, [dataCoins, users])\r\n\r\n  const customLabel = () => {\r\n    return (\r\n      <g>\r\n        <text className='custom_label' x='50%' y='40%' dy={-5} textAnchor='middle'>\r\n          <tspan x='50%' y='42%'>Balance</tspan>\r\n          <tspan x='51%' y='52%'>{chartBalance} $</tspan>\r\n        </text>\r\n      </g>\r\n    )\r\n  }\r\n\r\n  const customLegend = () => {\r\n    return (\r\n      <ul>\r\n        {\r\n          dataChart.map((entry, index) => (\r\n            <li key={`item-${index}`}>\r\n              <span style={{ color: colors[index % colors.length] }}>{entry.name}</span>\r\n              <span style={{ color: colors[index % colors.length] }}>{Math.ceil(entry.quantity / sumCoins * 100)}%</span>\r\n            </li >\r\n          ))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div name='donut_chart' className='donut_chart'>\r\n      <ResponsiveContainer width='100%' height='100%'>\r\n        <PieChart width='100%' height='100%'>\r\n          <Pie data={dataChart} dataKey='quantity' cx='50%' cy='55%' innerRadius={80} outerRadius={100}>\r\n            {dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n            ))}\r\n            <Label content={customLabel} />\r\n          </Pie>\r\n          <Legend content={customLegend} wrapperStyle={{ position: 'unset', height: 'auto' }} />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ChartDonutBalance","import React from 'react'\r\nimport SpendingJson from '../json/spending.json'\r\nimport { LineChart, Line, ResponsiveContainer, Tooltip, XAxis, Brush } from 'recharts';\r\n\r\nfunction ChartLineSpending() {\r\n    const data = SpendingJson.spendings\r\n\r\n    const CustomTooltip = ({ active, payload }) => {\r\n        if (active) {\r\n            return (\r\n                <ul className='custom-tooltip'>\r\n                    <li>\r\n                        <span>{`Spending: ${payload[0].value} $`}</span>\r\n                        <span>{`Date: ${payload[0].payload.date}`}</span>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='line_chart'>\r\n            <p>\r\n                Total spending: {data.reduce((a, b) => a + b.spending, 0)} $\r\n            </p>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <LineChart data={data} >\r\n                    <Tooltip cursor={false} content={CustomTooltip} active={true} />\r\n                    <Line dataKey='spending' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n                    <XAxis className='spending_cartesian-axis' dataKey='id' interval={0} padding={{ left: 15, right: 15 }} axisLine={false} tickLine={false} />\r\n                    <Brush startIndex={0} endIndex={9} travellerWidth={0} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartLineSpending","import React, { useState, useEffect } from 'react'\r\nimport { LineChart, Line, ResponsiveContainer, XAxis, YAxis, Brush, Tooltip } from 'recharts';\r\nimport dateFormat from 'dateformat';\r\nimport { chartNavCoins, chartCoins, month, years, date, chartNavYear, chartNavMonth } from '../untility/Consts'\r\n\r\nfunction ChartLineMarketPrice(props) {\r\n  const dataCoins = JSON.parse(JSON.stringify(props.dataCoinsCourseHistory))\r\n\r\n  const newChart = []\r\n\r\n  const [dataChart, setDataChart] = useState()\r\n  const [selectedCoinChart, setSelectedCoinChart] = useState(chartCoins[0])\r\n\r\n  const [valueMonth, setValueMonth] = useState(month[date.getMonth()])\r\n  const [valueYear, setValueYear] = useState(years[1])\r\n\r\n  useEffect(() => {\r\n    for (let prop in dataCoins) {\r\n      dataCoins[prop] = {\r\n        dayChart: dateFormat(dataCoins[prop].date, 'mmm dd'),\r\n        dateChart: dateFormat(dataCoins[prop].date, 'dd-mm-yyyy'),\r\n        monthChart: dateFormat(dataCoins[prop].date, 'mmmm'),\r\n        yearChart: dateFormat(dataCoins[prop].date, 'yyyy'),\r\n        priceUsd: Math.ceil(dataCoins[prop].priceUsd)\r\n      }\r\n      if (dataCoins[prop].monthChart === valueMonth && dataCoins[prop].yearChart === valueYear) {\r\n        newChart.push(dataCoins[prop])\r\n      }\r\n    }\r\n    setDataChart(newChart)\r\n  }, [props.dataCoinsCourseHistory, selectedCoinChart, valueMonth, valueYear])\r\n\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <ul className='custom-tooltip'>\r\n          <li>\r\n            <span>{`Cost: ${payload[0].value} $`}</span>\r\n            <span>{`Date: ${payload[0].payload.dateChart}`}</span>\r\n          </li>\r\n        </ul>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper_market_price'>\r\n      <div className='wrapper_market_price_content_top'>\r\n        <h2>Market</h2>\r\n        <select className='navigation_chart' value={selectedCoinChart} onChange={event => setSelectedCoinChart(event.target.value)}>\r\n          {chartNavCoins}\r\n        </select>\r\n        <div className='month_chart'>\r\n          <select className='navigation_chart' value={valueMonth} onChange={event => setValueMonth(event.target.value)}>\r\n            {chartNavMonth}\r\n          </select>\r\n        </div>\r\n        <div className='year_chart'>\r\n          <select className='navigation_chart' value={valueYear} onChange={event => setValueYear(event.target.value)}>\r\n            {chartNavYear}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='line_chart_market_price' >\r\n        <ResponsiveContainer>\r\n          <LineChart data={dataChart}>\r\n            <Tooltip cursor={false} content={CustomTooltip} active={true} />\r\n            <Line dataKey='priceUsd' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n            <YAxis dataKey='priceUsd' type='number' domain={['dataMin', 'dataMax']} axisLine={false} tickLine={false} />\r\n            <XAxis dataKey='dayChart' padding={{ left: 40, right: 40 }} axisLine={false} tickLine={false} />\r\n            <Brush startIndex={0} endIndex={9} travellerWidth={1} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartLineMarketPrice","import React, { useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { loadDataCoins, loadDataCourseHistory } from '../redux/actions'\r\nimport './OverViewContent.css'\r\nimport { day, month, date } from '../untility/Consts'\r\nimport CoinsContent from './coinsContent/CoinsContent'\r\nimport Users from '../json/userBalance.json'\r\nimport RecentNews from './recentNews/RecentNews'\r\nimport ChartDonutBalance from '../Charts/ChartDonutBalance'\r\nimport ChartLineSpending from '../Charts/ChartLineSpending'\r\nimport ChartLineMarketPrice from '../Charts/ChartLineMarketPrice'\r\n\r\nfunction OverViewContent(props) {\r\n\r\n  return (\r\n    <div className='wrapper_overview_balance_coins'>\r\n      <div className='wrapper_overview_information'>\r\n        <div className='wrapper_overview_datefolder'>\r\n          <h2>Overview</h2>\r\n          <p name='dateFolder'>{date.getDate() + ' ' + month[date.getMonth()] + ', ' + day[date.getDay()]}</p>\r\n        </div>\r\n        <button type='submit' className='btn_add_widget'>Add Widget</button>\r\n      </div>\r\n      <div className='balance_spendings_coins'>\r\n        <div className='wrapper_balance'>\r\n          <h3>Balance</h3>\r\n          <div className='wrapper_donut_chart'>\r\n            <ChartDonutBalance Users={Users} dataCoinsChart={props.dataCoinsChart} />\r\n          </div>\r\n        </div>\r\n        <div className='wrapper_spending'>\r\n          <div className='wrapper_spending_content'>\r\n            <h3>Spending</h3>\r\n            <a href='/' className='month'>Month</a>\r\n          </div>\r\n          <ChartLineSpending />\r\n        </div>\r\n        <CoinsContent Users={Users} dataCoinsChart={props.dataCoinsChart} />\r\n      </div>\r\n      <div className='wrapper_market_news'>\r\n        <ChartLineMarketPrice dataCoinsCourseHistory={props.dataCoinsCourseHistory} />\r\n        <div className='wrapper_recent_news'>\r\n          <div className='wrapper-recent_news_top'>\r\n            <h2>Recent News</h2>\r\n            <hr />\r\n          </div>\r\n          <div className='wrapper_news'>\r\n            <RecentNews />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OverViewContent","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadDataCoins, loadDataCourseHistory } from './redux/actions'\nimport './App.css';\nimport Menu from './Menu/Menu'\nimport { menuItem } from './untility/Consts'\nimport MessagesIcon from './img/messagesIcon.svg'\nimport NotificationIcon from './img/notificationIcon.svg'\nimport OverViewContent from './overViewContent/OverViewContent';\nimport WalletsContent from './walletsContent/walletsContent'\n\nfunction App() {\n    const dataCoinsChart = useSelector(state => {\n        const { loadDataCoinsReducer } = state;\n        return loadDataCoinsReducer.dataCoins;\n    })\n\n    const dataCoinsCourseHistory = useSelector(state => {\n        const { loadDataCoinsCourseHistoryReducer } = state;\n        return loadDataCoinsCourseHistoryReducer.dataCoinsHistory;\n    })\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loadDataCoins());\n        dispatch(loadDataCourseHistory());\n    }, [])\n\n    const [open, setOpen] = useState(false)\n\n    const handleOnClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <div className='wrapper_container'>\n            <header className={`${open ? 'active' : ''}`}>\n                <h1>valuet</h1>\n                <hr />\n                <div className='wrapper_menu'>\n                    <nav className='menu_body'>\n                        <Menu menuItem={menuItem} />\n                    </nav>\n                    <hr />\n                </div>\n                <div className='wrapper_person'>\n                    <div className='wrapper_person_profile'>\n                        <div className='person_circle'></div>\n                        <p>Mike Jakson</p>\n                    </div>\n                    <div className='wrapper_log_out'>\n                        <svg width='17' height='16' viewBox='0 0 17 16' fill='none' xmlns='http://www.w3.org/2000/svg'>\n                            <path d='M7.30965 11.2L8.55409 12.4444L12.9985 8L8.55409 3.55556L7.30965 4.8L9.62076 7.11111H0.998535V8.88889H9.57631L7.30965 11.2ZM15.2208 0H2.77631C1.79854 0 0.998535 0.8 0.998535 1.77778V5.33333H2.77631V1.77778H15.2208V14.2222H2.77631V10.6667H0.998535V14.2222C0.998535 15.2 1.79854 16 2.77631 16H15.2208C16.1985 16 16.9985 15.2 16.9985 14.2222V1.77778C16.9985 0.8 16.1985 0 15.2208 0Z' />\n                        </svg>\n                        <a href='# ' className='log_out'>Log Out</a>\n                    </div>\n                </div>\n            </header>\n            <section className='wrapper_content_top'>\n                <div className='search_message_notification'>\n                    <form action='' method='GET'>\n                        <input type='search' placeholder='Search' className='search' />\n                        <button type='submit' className='btn_search'></button>\n                    </form>\n                    <div className='wrapper_notifications'>\n                        <img src={MessagesIcon} alt='' />\n                        <div className={`wrapper-messages ${open ? '' : ''}`}>\n                            <p>Not Messages</p>\n                        </div>\n                        <img src={NotificationIcon} alt='' />\n                        <div onClick={handleOnClick} className={`menu_burger ${open ? 'active' : ''}`}>\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n            </section>\n            <section className='wrapper_content_center'>\n                <OverViewContent dataCoinsChart={dataCoinsChart} dataCoinsCourseHistory={dataCoinsCourseHistory} />\n                {/* <WalletsContent dataCoinsChart={dataCoinsChart} /> */}\n            </section>\n        </div>\n    )\n}\n\nexport default App;\n","import {\r\n    LOAD_DATA_COINS,\r\n    LOAD_DATA_COINS_COURSE_HISTORY\r\n} from \"./types\";\r\n\r\n\r\nexport function loadDataCoins() {\r\n    return async dispatch => {\r\n        const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=24h');\r\n        const jsonData = await response.json();\r\n\r\n        dispatch({\r\n            type: LOAD_DATA_COINS,\r\n            data: jsonData\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadDataCourseHistory() {\r\n    return async dispatch => {\r\n        const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=usd&from=1577836800&to=1634601600');\r\n        const jsonData = await response.json();\r\n\r\n        dispatch({\r\n            type: LOAD_DATA_COINS_COURSE_HISTORY,\r\n            data: jsonData.prices\r\n        })\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk\n  )\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}