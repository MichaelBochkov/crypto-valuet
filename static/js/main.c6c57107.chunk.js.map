{"version":3,"sources":["Menu/Menu.jsx","Menu/MenuIcon/Icons.svg","Menu/MenuIcon/MenuIcons.jsx","untility/Consts.js","img/messagesIcon.svg","img/notificationIcon.svg","overViewContent/img/coins/CoinIcons.svg","overViewContent/img/coins/CoinsIcons.jsx","api/useCoinsAssets.js","overViewContent/coinsContent/coinsItem/CoinsItem.jsx","overViewContent/coinsContent/CoinsContent.jsx","overViewContent/recentNews/RecentNews.jsx","Charts/ChartDonutBalance.jsx","Charts/ChartLineSpending.jsx","api/useCoinsCourseHistoryBitcoin.js","Charts/ChartLineMarketPrice.jsx","overViewContent/OverViewContent.jsx","App.jsx","index.jsx"],"names":["Menu","props","useState","active","setActive","className","menuItem","map","item","k","onClick","itemSvg","href","itemName","Icons","name","color","size","fill","stroke","width","height","xlinkHref","IconsSVG","colors","date","Date","day","month","years","id","CoinsIcons","useCoinsAssets","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","CoinsContent","btcPriceUsd","user","dataCostCoinsUsd","JSON","parse","stringify","coinsAssets","dataCoinsAssets","prop","data","coinName","usdPrice","priceUsd","symbol","quantity","Math","floor","btcPrice","dataChart","Users","balance","slice","sort","a","b","CoinsItem","RecentNews","ChartDonutBalance","dataCoinsChart","costCoins","users","reduce","sumCoins","chartBalance","setChartBalance","push","ResponsiveContainer","PieChart","Pie","dataKey","cx","cy","innerRadius","outerRadius","entry","index","Cell","length","Label","content","x","y","dy","textAnchor","Legend","style","ceil","wrapperStyle","position","SpendingJson","spendings","CustomTooltip","payload","value","ChartLineSpending","spending","LineChart","Tooltip","cursor","Line","type","strokeWidth","dot","XAxis","interval","padding","left","right","axisLine","tickLine","Brush","startIndex","endIndex","travellerWidth","useCoinsCourseHistory","ChartLineMarketPrice","coinsCourseHistory","useCoinsCourseHistoryBitcoin","dataCoinsCourseHistory","setDataChart","getMonth","valueMonth","setvalueMonth","valueYear","setvalueYear","newChart","dayChart","dateFormat","dateChart","monthChart","yearChart","chartNavYear","year","chartNavMonth","onChange","event","target","YAxis","tickCount","OverViewContent","getDate","getDay","App","open","setOpen","viewBox","xmlns","d","action","method","placeholder","src","MessagesIcon","alt","NotificationIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6c57107.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport './Menu.css'\r\n\r\nfunction Menu(props) {\r\n  const [active, setActive] = useState(null)\r\n\r\n  return (\r\n    <ul className='menu_list'>\r\n      {props.menuItem.map((item, k) => {\r\n        return (\r\n          <li key={k} className={`menu_item ${active === k ? 'active' : ''}`} onClick={() => setActive(k)}>\r\n            {item.itemSvg}\r\n            <a href='/'>\r\n              {item.itemName}\r\n            </a>\r\n            <hr />\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","export default __webpack_public_path__ + \"static/media/Icons.ebef1605.svg\";","import React from 'react';\r\nimport IconsSVG from './Icons.svg'\r\n\r\nfunction Icons({ name, color, size, className }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name} ${className}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icons;","import Icons from '../Menu/MenuIcon/MenuIcons'\r\n\r\nconst colors = ['#018FFF', '#FAD679', '#F5FBFE']\r\n\r\nconst date = new Date()\r\nconst day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\nconst month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\nconst years = ['2020', '2021']\r\n\r\nconst menuItem = [{\r\n        id: 1,\r\n        itemName: 'Overview',\r\n        itemSvg: < Icons name = 'overview'\r\n        className = 'overviewIcon' / >\r\n    },\r\n    {\r\n        id: 2,\r\n        itemName: 'Wallets',\r\n        itemSvg: < Icons name = 'wallets'\r\n        className = 'walletsIcon' / >\r\n    },\r\n    {\r\n        id: 3,\r\n        itemName: 'Transictions',\r\n        itemSvg: < Icons name = 'transictions'\r\n        className = 'transictionsIcon' / >\r\n    },\r\n    {\r\n        id: 4,\r\n        itemName: 'Exchange',\r\n        itemSvg: < Icons name = 'exchange'\r\n        className = 'exchangeIcon' / >\r\n    },\r\n    {\r\n        id: 5,\r\n        itemName: 'Market',\r\n        itemSvg: < Icons name = 'market'\r\n        className = 'marketIcon' / >\r\n    },\r\n]\r\n\r\nexport { colors, date, day, month, years, menuItem }","export default __webpack_public_path__ + \"static/media/messagesIcon.aa3e86f8.svg\";","export default __webpack_public_path__ + \"static/media/notificationIcon.44b9138d.svg\";","export default __webpack_public_path__ + \"static/media/CoinIcons.e7940450.svg\";","import React from 'react';\r\nimport IconsSVG from './CoinIcons.svg'\r\n\r\nfunction CoinsIcons({ name, color, size }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default CoinsIcons;","import { useEffect, useState } from 'react'\r\n\r\nfunction useCoinsAssets() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.coincap.io/v2/assets\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return [items, isLoaded, error]\r\n}\r\n\r\nexport default useCoinsAssets","import React from 'react'\r\nimport CoinsIcons from '../../img/coins/CoinsIcons'\r\nimport useCoinsAssets from '../../../api/useCoinsAssets'\r\n\r\nfunction CoinsContent({ user }) {\r\n    const dataCostCoinsUsd = JSON.parse(JSON.stringify(user))\r\n    const coinsAssets = useCoinsAssets()\r\n    const dataCoinsAssets = JSON.parse(JSON.stringify(coinsAssets[0]))\r\n\r\n    let btcPriceUsd\r\n\r\n    for (let prop in dataCoinsAssets.data) {\r\n        let coinName = dataCoinsAssets.data[prop].name\r\n        let usdPrice = dataCoinsAssets.data[prop].priceUsd\r\n        let symbol = dataCoinsAssets.data[prop].symbol\r\n        if (coinName === 'Bitcoin') {\r\n            btcPriceUsd = usdPrice\r\n        }\r\n        if (coinName === dataCostCoinsUsd.name) {\r\n            dataCostCoinsUsd.quantity = Math.floor(dataCostCoinsUsd.quantity * usdPrice * 100) / 100\r\n            dataCostCoinsUsd.symbol = symbol\r\n            dataCostCoinsUsd.usdPrice = Math.floor(usdPrice * 100) / 100\r\n            dataCostCoinsUsd.btcPrice = Math.floor(usdPrice / btcPriceUsd * 100000) / 100000\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper_coin'>\r\n            <div className='wrapper_coin_content_left'>\r\n                <p>{user.name}</p>\r\n                <div className='coin'>\r\n                    <div className='coin_two'>\r\n                        <CoinsIcons name={user.name} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='wrapper_coin_content_center'>\r\n                <p>{user.quantity} {dataCostCoinsUsd.symbol}</p>\r\n                <p>{dataCostCoinsUsd.quantity} $</p>\r\n            </div>\r\n            <div className='wrapper_coin_content_right'>\r\n                <p>1 {dataCostCoinsUsd.symbol} = {dataCostCoinsUsd.usdPrice} $</p>\r\n                <p>1 BTC = {dataCostCoinsUsd.btcPrice} {dataCostCoinsUsd.symbol}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\nimport CoinsItem from './coinsItem/CoinsItem'\r\n\r\nfunction CoinsContent(props) {\r\n  let users = JSON.parse(JSON.stringify(props.Users.balance))\r\n  let dataChart = users\r\n    .slice()\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 4)\r\n\r\n  return (\r\n    <div className='wrapper_coins'>\r\n      {\r\n        dataChart.map(user => {\r\n          return (\r\n            <CoinsItem user={user} key={user.id} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\n\r\nfunction RecentNews() {\r\n  return (\r\n    <div className='wrapper_news_content'>\r\n      <p>19 hours ago</p>\r\n      <p>SEC Fails to Show Court Blockvest Tokens Are Securities</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentNews","import React, { useEffect, useState } from 'react'\r\nimport { colors } from '../untility/Consts'\r\nimport { PieChart, Pie, Cell, Legend, ResponsiveContainer, Label } from 'recharts';\r\nimport useCoinsAssets from '../api/useCoinsAssets';\r\n\r\nfunction ChartDonutBalance(props) {\r\n  const coinsAssets = useCoinsAssets()\r\n  const dataCoinsChart = JSON.parse(JSON.stringify(coinsAssets[0]))\r\n  const costCoins = []\r\n\r\n  const [users, setUsers] = useState(JSON.parse(JSON.stringify(props.Users.balance)))\r\n  const [sumCoins, setSumCoins] = useState(users.reduce((a, b) => a + b.quantity, 0))\r\n\r\n  const [dataChart, setDataChart] = useState(users\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 3))\r\n\r\n  const [chartBalance, setChartBalance] = useState()\r\n\r\n  useEffect(() => {\r\n    for (let prop in dataCoinsChart.data) {\r\n      const coinName = dataCoinsChart.data[prop].name\r\n      const usdPrice = dataCoinsChart.data[prop].priceUsd\r\n      for (let prop in users) {\r\n        if (coinName === users[prop].name) {\r\n          costCoins.push(usdPrice * users[prop].quantity)\r\n        }\r\n      }\r\n    }\r\n    setChartBalance(Math.floor(costCoins.reduce((a, b) => a + b, 0) * 100) / 100)\r\n  }, [dataCoinsChart, users])\r\n\r\n  const customLabel = () => {\r\n    return (\r\n      <g>\r\n        <text className='custom_label' x='50%' y='40%' dy={9} textAnchor='middle'>\r\n          <tspan>Balance</tspan>\r\n          <tspan x='51%' y='52%'>{chartBalance} $</tspan>\r\n        </text>\r\n      </g>\r\n    )\r\n  }\r\n\r\n  const customLegend = () => {\r\n    return (\r\n      <ul>\r\n        {\r\n          dataChart.map((entry, index) => (\r\n            <li key={`item-${index}`}>\r\n              <span style={{ color: colors[index % colors.length] }}>{entry.name}</span>\r\n              <span style={{ color: colors[index % colors.length] }}>{Math.ceil(entry.quantity / sumCoins * 100)}%</span>\r\n            </li >\r\n          ))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div name='donut_chart' className='donut_chart'>\r\n      <ResponsiveContainer width='100%' height='100%'>\r\n        <PieChart width='100%' height='100%'>\r\n          <Pie data={dataChart} dataKey='quantity' cx='50%' cy='55%' innerRadius={80} outerRadius={100}>\r\n            {dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n            ))}\r\n            <Label content={customLabel} />\r\n          </Pie>\r\n          <Legend content={customLegend} wrapperStyle={{ position: 'unset', height: 'auto' }} />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ChartDonutBalance","import React from 'react'\r\nimport SpendingJson from '../json/spending.json'\r\nimport { LineChart, Line, ResponsiveContainer, Tooltip, XAxis, Brush } from 'recharts';\r\n\r\nlet data = SpendingJson.spendings\r\n\r\nconst CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <ul className='custom-tooltip'>\r\n                <li>\r\n                    <span>{`Spending: ${payload[0].value} $`}</span>\r\n                    <span>{`Date: ${payload[0].payload.date}`}</span>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nfunction ChartLineSpending() {\r\n    return (\r\n        <div className='line_chart'>\r\n            <p>\r\n                Total spending: {data.reduce((a, b) => a + b.spending, 0)} $\r\n            </p>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <LineChart data={data} >\r\n                    <Tooltip cursor={false} content={CustomTooltip} active={true} />\r\n                    <Line dataKey='spending' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n                    <XAxis className='spending_cartesian-axis' dataKey='id' interval={0} padding={{ left: 15, right: 15 }} axisLine={false} tickLine={false} />\r\n                    <Brush startIndex={0} endIndex={9} travellerWidth={0} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartLineSpending","import { useEffect, useState } from 'react'\r\n\r\nfunction useCoinsCourseHistory() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.coincap.io/v2/assets/bitcoin/history?interval=d1\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return [items, isLoaded, error]\r\n}\r\n\r\nexport default useCoinsCourseHistory","import React, { useState, useEffect } from 'react'\r\nimport { LineChart, Line, ResponsiveContainer, XAxis, YAxis, Brush } from 'recharts';\r\nimport dateFormat from 'dateformat';\r\nimport { date, month, years } from '../untility/Consts'\r\nimport useCoinsCourseHistoryBitcoin from '../api/useCoinsCourseHistoryBitcoin'\r\n\r\nfunction ChartLineMarketPrice() {\r\n\r\n  const coinsCourseHistory = useCoinsCourseHistoryBitcoin()\r\n  const dataCoinsCourseHistory = JSON.parse(JSON.stringify(coinsCourseHistory[0]))\r\n\r\n  const [dataChart, setDataChart] = useState()\r\n\r\n  const [valueMonth, setvalueMonth] = useState(month[date.getMonth()])\r\n  const [valueYear, setvalueYear] = useState(years[1])\r\n\r\n  useEffect(() => {\r\n    let newChart = []\r\n    for (let prop in dataCoinsCourseHistory.data) {\r\n      dataCoinsCourseHistory.data[prop] = {\r\n        dayChart: dateFormat(dataCoinsCourseHistory.data[prop].date, 'mmm dd'),\r\n        dateChart: dateFormat(dataCoinsCourseHistory.data[prop].date, 'dd-mm-yyyy'),\r\n        monthChart: dateFormat(dataCoinsCourseHistory.data[prop].date, 'mmmm'),\r\n        yearChart: dateFormat(dataCoinsCourseHistory.data[prop].date, 'yyyy'),\r\n        priceUsd: Math.ceil(dataCoinsCourseHistory.data[prop].priceUsd)\r\n      }\r\n      if (dataCoinsCourseHistory.data[prop].monthChart === valueMonth && dataCoinsCourseHistory.data[prop].yearChart === valueYear) {\r\n        newChart.push(dataCoinsCourseHistory.data[prop])\r\n      }\r\n    }\r\n    setDataChart(newChart)\r\n  }, [valueMonth, valueYear])\r\n\r\n  const chartNavYear = years.map((year, index) => {\r\n    return (\r\n      <option key={`item-${index}`} value={year}>{year}</option>\r\n    )\r\n  })\r\n\r\n  const chartNavMonth = month.map((month, index) => {\r\n    return (\r\n      <option key={`item-${index}`} value={month}>{month}</option>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='wrapper_market_price'>\r\n      <div className='wrapper_market_price_content_top'>\r\n        <h2>Market</h2>\r\n        <p className='btn_coin'>Bitcoin</p>\r\n        <div className='month_chart'>\r\n          <select className='navigation_chart' value={valueMonth} onChange={(event) => setvalueMonth(event.target.value)}>\r\n            {chartNavMonth}\r\n          </select>\r\n        </div>\r\n        <div className='year_chart'>\r\n          <select className='navigation_chart' value={valueYear} onChange={(event) => setvalueYear(event.target.value)}>\r\n            {chartNavYear}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='line_chart_market_price' >\r\n        <ResponsiveContainer>\r\n          <LineChart data={dataChart}>\r\n            <Line dataKey='priceUsd' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n            <YAxis dataKey='priceUsd' type='number' tickCount={4} axisLine={false} tickLine={false} />\r\n            <XAxis dataKey='dayChart' interval={0} padding={{ left: 40, right: 40 }} axisLine={false} tickLine={false} />\r\n            <Brush startIndex={0} endIndex={9} travellerWidth={0} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartLineMarketPrice","import React from 'react'\r\nimport './OverViewContent.css'\r\nimport { day, month, date } from '../untility/Consts'\r\nimport CoinsContent from './coinsContent/CoinsContent'\r\nimport Users from '../json/userBalance.json'\r\nimport RecentNews from './recentNews/RecentNews'\r\nimport ChartDonutBalance from '../Charts/ChartDonutBalance'\r\nimport ChartLineSpending from '../Charts/ChartLineSpending'\r\nimport ChartLineMarketPrice from '../Charts/ChartLineMarketPrice'\r\n\r\nfunction OverViewContent() {\r\n  return (\r\n    <div className='wrapper_overview_balance_coins'>\r\n      <div className='wrapper_overview_information'>\r\n        <div className='wrapper_overview_datefolder'>\r\n          <h2>Overview</h2>\r\n          <p name='dateFolder'>{date.getDate() + ' ' + month[date.getMonth()] + ', ' + day[date.getDay()]}</p>\r\n        </div>\r\n        <button type='submit' className='btn_add_widget'>Add Widget</button>\r\n      </div>\r\n      <div className='balance_spendings_coins'>\r\n        <div className='wrapper_balance'>\r\n          <h3>Balance</h3>\r\n          <div className='wrapper_donut_chart'>\r\n            <ChartDonutBalance Users={Users} />\r\n          </div>\r\n        </div>\r\n        <div className='wrapper_spending'>\r\n          <div className='wrapper_spending_content'>\r\n            <h3>Spending</h3>\r\n            <a href='/' className='month'>Month</a>\r\n          </div>\r\n          <ChartLineSpending />\r\n        </div>\r\n        <CoinsContent Users={Users} />\r\n      </div>\r\n      <div className='wrapper_market_news'>\r\n        <ChartLineMarketPrice />\r\n        <div className='wrapper_recent_news'>\r\n          <div className='wrapper-recent_news_top'>\r\n            <h2>Recent News</h2>\r\n            <hr />\r\n          </div>\r\n          <div className='wrapper_news'>\r\n            <RecentNews />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OverViewContent","import React, { useState } from 'react'\nimport './App.css';\nimport Menu from './Menu/Menu'\nimport { menuItem } from './untility/Consts'\nimport MessagesIcon from './img/messagesIcon.svg'\nimport NotificationIcon from './img/notificationIcon.svg'\nimport OverViewContent from './overViewContent/OverViewContent';\nimport WalletsContent from './walletsContent/walletsContent'\n\nfunction App() {\n\n    const [open, setOpen] = useState(false)\n    const handleOnClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <div className='wrapper_container'>\n            <header className={`${open ? 'active' : ''}`}>\n                <h1>valuet</h1>\n                <hr />\n                <div className='wrapper_menu'>\n                    <nav className='menu_body'>\n                        <Menu menuItem={menuItem} />\n                    </nav>\n                    <hr />\n                </div>\n                <div className='wrapper_person'>\n                    <div className='wrapper_person_profile'>\n                        <div className='person_circle'></div>\n                        <p>Mike Jakson</p>\n                    </div>\n                    <div className='wrapper_log_out'>\n                        <svg width='17' height='16' viewBox='0 0 17 16' fill='none' xmlns='http://www.w3.org/2000/svg'>\n                            <path d='M7.30965 11.2L8.55409 12.4444L12.9985 8L8.55409 3.55556L7.30965 4.8L9.62076 7.11111H0.998535V8.88889H9.57631L7.30965 11.2ZM15.2208 0H2.77631C1.79854 0 0.998535 0.8 0.998535 1.77778V5.33333H2.77631V1.77778H15.2208V14.2222H2.77631V10.6667H0.998535V14.2222C0.998535 15.2 1.79854 16 2.77631 16H15.2208C16.1985 16 16.9985 15.2 16.9985 14.2222V1.77778C16.9985 0.8 16.1985 0 15.2208 0Z' />\n                        </svg>\n                        <a href='# ' className='log_out'>Log Out</a>\n                    </div>\n                </div>\n            </header>\n            <section className='wrapper_content_top'>\n                <div className='search_message_notification'>\n                    <form action='' method='GET'>\n                        <input type='search' placeholder='Search' className='search' />\n                        <button type='submit' className='btn_search'></button>\n                    </form>\n                    <div className='wrapper_notifications'>\n                        <img src={MessagesIcon} alt='' />\n                        <img src={NotificationIcon} alt='' />\n                        <div onClick={handleOnClick} className={`menu_burger ${open ? 'active' : ''}`}>\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n            </section>\n            <section className='wrapper_content_center'>\n                <OverViewContent />\n                {/* <WalletsContent /> */}\n            </section>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}