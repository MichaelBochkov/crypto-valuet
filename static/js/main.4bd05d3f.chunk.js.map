{"version":3,"sources":["redux/types.js","redux/loadDataCoinsReducer.js","redux/loadDataCoinsCourseHistoryReducer.js","redux/rootReducer.js","Menu/Menu.jsx","Menu/MenuIcon/Icons.svg","Menu/MenuIcon/MenuIcons.jsx","untility/Consts.js","img/messagesIcon.svg","img/notificationIcon.svg","overViewContent/img/coins/CoinIcons.svg","overViewContent/img/coins/CoinsIcons.jsx","overViewContent/coinsContent/coinsItem/CoinsItem.jsx","overViewContent/coinsContent/CoinsContent.jsx","overViewContent/recentNews/RecentNews.jsx","Charts/ChartDonutBalance.jsx","Charts/ChartLineSpending.jsx","Charts/ChartLineMarketPrice.jsx","overViewContent/OverViewContent.jsx","redux/actions.js","App.jsx","index.jsx"],"names":["LOAD_DATA_COINS","LOAD_DATA_COINS_COURSE_HISTORY","initialState","dataCoins","dataCoinsHistory","rootReducer","combineReducers","loadDataCoinsReducer","state","action","type","dataCoinsNew","data","map","res","id","rank","name","symbol","priceUsd","loadDataCoinsCourseHistoryReducer","date","Menu","props","useState","active","setActive","className","menuItem","item","k","onClick","itemSvg","href","itemName","Icons","color","size","fill","stroke","width","height","xlinkHref","IconsSVG","colors","Date","day","month","years","chartNavYear","year","index","value","chartNavMonth","CoinsIcons","CoinsContent","user","dataUsersCoins","JSON","parse","stringify","sortDataCost","costUsd","costUsdOneCoin","btcPrice","DataCost","setNewDataCost","useEffect","btcPriceUsd","prop","coinName","usdPrice","Math","floor","quantity","users","Users","balance","dataCoinsChart","dataChart","slice","sort","a","b","CoinsItem","RecentNews","ChartDonutBalance","costCoins","chartBalance","setChartBalance","sumCoins","reduce","push","ResponsiveContainer","PieChart","Pie","dataKey","cx","cy","innerRadius","outerRadius","entry","Cell","length","Label","content","x","y","dy","textAnchor","Legend","style","ceil","wrapperStyle","position","SpendingJson","spendings","CustomTooltip","payload","ChartLineSpending","spending","LineChart","Tooltip","cursor","Line","strokeWidth","dot","XAxis","interval","padding","left","right","axisLine","tickLine","Brush","startIndex","endIndex","travellerWidth","ChartLineMarketPrice","dataCoinsCourseHistory","newChart","setDataChart","getMonth","valueMonth","setvalueMonth","valueYear","setvalueYear","dayChart","dateFormat","dateChart","monthChart","yearChart","onChange","event","target","YAxis","domain","tickCount","OverViewContent","useSelector","dispatch","useDispatch","fetch","response","json","jsonData","getDate","getDay","App","open","setOpen","viewBox","xmlns","d","method","placeholder","src","MessagesIcon","alt","NotificationIcon","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bd05d3f.chunk.js","sourcesContent":["export const LOAD_DATA_COINS = 'LOAD_DATA_COINS';\r\nexport const LOAD_DATA_COINS_COURSE_HISTORY = 'LOAD_DATA_COINS_COURSE_HISTORY';","import {\r\n    LOAD_DATA_COINS\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    dataCoins: []\r\n}\r\n\r\nexport const loadDataCoinsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOAD_DATA_COINS:\r\n            const dataCoinsNew = action.data.map(res => {\r\n                return {\r\n                    id: res.rank,\r\n                    name: res.name,\r\n                    symbol: res.symbol,\r\n                    priceUsd: res.priceUsd\r\n                };\r\n            })\r\n            return {\r\n                ...state,\r\n                dataCoins: dataCoinsNew\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    LOAD_DATA_COINS_COURSE_HISTORY\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    dataCoinsHistory: []\r\n}\r\n\r\nexport const loadDataCoinsCourseHistoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOAD_DATA_COINS_COURSE_HISTORY:\r\n            const dataCoinsNew = action.data.map(res => {\r\n                return {\r\n                    date: res.date,\r\n                    priceUsd: res.priceUsd\r\n                };\r\n            })\r\n            return {\r\n                ...state,\r\n                dataCoinsHistory: dataCoinsNew\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { loadDataCoinsReducer } from \"./loadDataCoinsReducer\";\r\nimport { loadDataCoinsCourseHistoryReducer } from \"./loadDataCoinsCourseHistoryReducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    loadDataCoinsReducer,\r\n    loadDataCoinsCourseHistoryReducer\r\n});","import React, { useState } from 'react'\r\nimport './Menu.css'\r\n\r\nfunction Menu(props) {\r\n  const [active, setActive] = useState(null)\r\n\r\n  return (\r\n    <ul className='menu_list'>\r\n      {props.menuItem.map((item, k) => {\r\n        return (\r\n          <li key={k} className={`menu_item ${active === k ? 'active' : ''}`} onClick={() => setActive(k)}>\r\n            {item.itemSvg}\r\n            <a href='/'>\r\n              {item.itemName}\r\n            </a>\r\n            <hr />\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","export default __webpack_public_path__ + \"static/media/Icons.ebef1605.svg\";","import React from 'react';\r\nimport IconsSVG from './Icons.svg'\r\n\r\nfunction Icons({ name, color, size, className }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name} ${className}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icons;","import Icons from '../Menu/MenuIcon/MenuIcons';\r\n\r\nconst colors = ['#018FFF', '#FAD679', '#F5FBFE']\r\n\r\nconst date = new Date()\r\nconst day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\nconst month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\nconst years = ['2020', '2021']\r\n\r\nconst chartNavYear = years.map((year, index) => {\r\n    return (\r\n        <option key={`item-${index}`} value={year}>{year}</option>\r\n    )\r\n})\r\n\r\nconst chartNavMonth = month.map((month, index) => {\r\n    return (\r\n        <option key={`item-${index}`} value={month}>{month}</option>\r\n    )\r\n})\r\n\r\nconst menuItem = [{\r\n    id: 1,\r\n    itemName: 'Overview',\r\n    itemSvg: < Icons name='overview'\r\n        className='overviewIcon' />\r\n},\r\n{\r\n    id: 2,\r\n    itemName: 'Wallets',\r\n    itemSvg: < Icons name='wallets'\r\n        className='walletsIcon' />\r\n},\r\n{\r\n    id: 3,\r\n    itemName: 'Transictions',\r\n    itemSvg: < Icons name='transictions'\r\n        className='transictionsIcon' />\r\n},\r\n{\r\n    id: 4,\r\n    itemName: 'Exchange',\r\n    itemSvg: < Icons name='exchange'\r\n        className='exchangeIcon' />\r\n},\r\n{\r\n    id: 5,\r\n    itemName: 'Market',\r\n    itemSvg: < Icons name='market'\r\n        className='marketIcon' />\r\n},\r\n]\r\n\r\nexport { colors, date, day, month, years, menuItem, chartNavYear, chartNavMonth }","export default __webpack_public_path__ + \"static/media/messagesIcon.aa3e86f8.svg\";","export default __webpack_public_path__ + \"static/media/notificationIcon.44b9138d.svg\";","export default __webpack_public_path__ + \"static/media/CoinIcons.e7940450.svg\";","import React from 'react';\r\nimport IconsSVG from './CoinIcons.svg'\r\n\r\nfunction CoinsIcons({ name, color, size }) {\r\n\r\n  return (\r\n    <svg className={`icon icon-${name}`} fill={color} stroke={color} width={size} height={size}>\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default CoinsIcons;","import React, { useState, useEffect } from 'react'\r\nimport CoinsIcons from '../../img/coins/CoinsIcons'\r\n\r\nfunction CoinsContent({ user, dataCoins }) {\r\n    const dataUsersCoins = JSON.parse(JSON.stringify(user))\r\n    let sortDataCost = {\r\n        name: '',\r\n        symbol: '',\r\n        costUsd: 0,\r\n        costUsdOneCoin: 0,\r\n        btcPrice: 0\r\n    }\r\n\r\n    const [DataCost, setNewDataCost] = useState(sortDataCost)\r\n\r\n    useEffect(() => {\r\n        let btcPriceUsd = 0\r\n        for (let prop in dataCoins) {\r\n            const coinName = dataCoins[prop].name\r\n            const usdPrice = dataCoins[prop].priceUsd\r\n            const symbol = dataCoins[prop].symbol\r\n\r\n            if (coinName === 'Bitcoin') {\r\n                btcPriceUsd = usdPrice\r\n            }\r\n            if (coinName === dataUsersCoins.name) {\r\n                sortDataCost.name = coinName\r\n                sortDataCost.symbol = symbol\r\n                sortDataCost.costUsd = Math.floor(dataUsersCoins.quantity * usdPrice * 100) / 100\r\n                sortDataCost.costUsdOneCoin = Math.floor(usdPrice * 100) / 100\r\n                sortDataCost.btcPrice = Math.floor(usdPrice / btcPriceUsd * 100000) / 100000\r\n            }\r\n        }\r\n        setNewDataCost(sortDataCost)\r\n    }, [dataCoins])\r\n\r\n    return (\r\n        <div className='wrapper_coin'>\r\n            <div className='wrapper_coin_content_left'>\r\n                <p>{user.name} </p>\r\n                <div className='coin'>\r\n                    <div className='coin_two'>\r\n                        <CoinsIcons name={user.name} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='wrapper_coin_content_center'>\r\n                <p>{user.quantity} {DataCost.symbol}</p>\r\n                <p>{DataCost.costUsd} $</p>\r\n            </div>\r\n            <div className='wrapper_coin_content_right'>\r\n                <p>1 {DataCost.symbol} = {DataCost.costUsdOneCoin} $</p>\r\n                <p>1 BTC = {DataCost.btcPrice} {DataCost.symbol}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\nimport CoinsItem from './coinsItem/CoinsItem'\r\n\r\nfunction CoinsContent(props) {\r\n  const users = JSON.parse(JSON.stringify(props.Users.balance))\r\n  const dataCoins = props.dataCoinsChart\r\n  const dataChart = users\r\n    .slice()\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 4)\r\n\r\n  return (\r\n    <div className='wrapper_coins'>\r\n      {\r\n        dataChart.map(user => {\r\n          return (\r\n            <CoinsItem user={user} key={user.id} dataCoins={dataCoins} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinsContent","import React from 'react'\r\n\r\nfunction RecentNews() {\r\n  return (\r\n    <div className='wrapper_news_content'>\r\n      <p>19 hours ago</p>\r\n      <p>SEC Fails to Show Court Blockvest Tokens Are Securities</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentNews","import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { loadDataCoins } from '../redux/actions'\r\nimport { colors } from '../untility/Consts'\r\nimport { PieChart, Pie, Cell, Legend, ResponsiveContainer, Label } from 'recharts';\r\n\r\nfunction ChartDonutBalance(props) {\r\n  const costCoins = []\r\n  const [chartBalance, setChartBalance] = useState()\r\n\r\n  const users = JSON.parse(JSON.stringify(props.Users.balance))\r\n  const sumCoins = users.reduce((a, b) => a + b.quantity, 0)\r\n\r\n  const dataCoins = props.dataCoinsChart\r\n\r\n  const dataChart = users\r\n    .sort((a, b) => { return b.quantity - a.quantity })\r\n    .slice(0, 3)\r\n\r\n  useEffect(() => {\r\n    for (let prop in dataCoins) {\r\n      const coinName = dataCoins[prop].name\r\n      const usdPrice = dataCoins[prop].priceUsd\r\n      for (let prop in users) {\r\n        if (coinName === users[prop].name) {\r\n          costCoins.push(usdPrice * users[prop].quantity)\r\n        }\r\n      }\r\n    }\r\n    setChartBalance(Math.floor(costCoins.reduce((a, b) => a + b, 0) * 100) / 100)\r\n  }, [dataCoins, users])\r\n\r\n  const customLabel = () => {\r\n    return (\r\n      <g>\r\n        <text className='custom_label' x='50%' y='40%' dy={-5} textAnchor='middle'>\r\n          <tspan x='50%' y='42%'>Balance</tspan>\r\n          <tspan x='51%' y='52%'>{chartBalance} $</tspan>\r\n        </text>\r\n      </g>\r\n    )\r\n  }\r\n\r\n  const customLegend = () => {\r\n    return (\r\n      <ul>\r\n        {\r\n          dataChart.map((entry, index) => (\r\n            <li key={`item-${index}`}>\r\n              <span style={{ color: colors[index % colors.length] }}>{entry.name}</span>\r\n              <span style={{ color: colors[index % colors.length] }}>{Math.ceil(entry.quantity / sumCoins * 100)}%</span>\r\n            </li >\r\n          ))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div name='donut_chart' className='donut_chart'>\r\n      <ResponsiveContainer width='100%' height='100%'>\r\n        <PieChart width='100%' height='100%'>\r\n          <Pie data={dataChart} dataKey='quantity' cx='50%' cy='55%' innerRadius={80} outerRadius={100}>\r\n            {dataChart.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n            ))}\r\n            <Label content={customLabel} />\r\n          </Pie>\r\n          <Legend content={customLegend} wrapperStyle={{ position: 'unset', height: 'auto' }} />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ChartDonutBalance","import React from 'react'\r\nimport SpendingJson from '../json/spending.json'\r\nimport { LineChart, Line, ResponsiveContainer, Tooltip, XAxis, Brush } from 'recharts';\r\n\r\nlet data = SpendingJson.spendings\r\n\r\nconst CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n        return (\r\n            <ul className='custom-tooltip'>\r\n                <li>\r\n                    <span>{`Spending: ${payload[0].value} $`}</span>\r\n                    <span>{`Date: ${payload[0].payload.date}`}</span>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nfunction ChartLineSpending() {\r\n    return (\r\n        <div className='line_chart'>\r\n            <p>\r\n                Total spending: {data.reduce((a, b) => a + b.spending, 0)} $\r\n            </p>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <LineChart data={data} >\r\n                    <Tooltip cursor={false} content={CustomTooltip} active={true} />\r\n                    <Line dataKey='spending' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n                    <XAxis className='spending_cartesian-axis' dataKey='id' interval={0} padding={{ left: 15, right: 15 }} axisLine={false} tickLine={false} />\r\n                    <Brush startIndex={0} endIndex={9} travellerWidth={0} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartLineSpending","import React, { useState, useEffect } from 'react'\r\nimport { LineChart, Line, ResponsiveContainer, XAxis, YAxis, Brush } from 'recharts';\r\nimport dateFormat from 'dateformat';\r\nimport { date, month, years, chartNavYear, chartNavMonth } from '../untility/Consts'\r\n\r\nfunction ChartLineMarketPrice(props) {\r\n  const dataCoins = JSON.parse(JSON.stringify(props.dataCoinsCourseHistory))\r\n  let newChart = []\r\n\r\n  const [dataChart, setDataChart] = useState(newChart)\r\n  const [valueMonth, setvalueMonth] = useState(month[date.getMonth()])\r\n  const [valueYear, setvalueYear] = useState(years[1])\r\n\r\n  useEffect(() => {\r\n    for (let prop in dataCoins) {\r\n      dataCoins[prop] = {\r\n        dayChart: dateFormat(dataCoins[prop].date, 'mmm dd'),\r\n        dateChart: dateFormat(dataCoins[prop].date, 'dd-mm-yyyy'),\r\n        monthChart: dateFormat(dataCoins[prop].date, 'mmmm'),\r\n        yearChart: dateFormat(dataCoins[prop].date, 'yyyy'),\r\n        priceUsd: Math.ceil(dataCoins[prop].priceUsd)\r\n      }\r\n      if (dataCoins[prop].monthChart === valueMonth && dataCoins[prop].yearChart === valueYear) {\r\n        newChart.push(dataCoins[prop])\r\n      }\r\n    }\r\n    setDataChart(newChart)\r\n  }, [valueMonth, valueYear])\r\n\r\n  return (\r\n    <div className='wrapper_market_price'>\r\n      <div className='wrapper_market_price_content_top'>\r\n        <h2>Market</h2>\r\n        <p className='btn_coin'>Bitcoin</p>\r\n        <div className='navigation'>\r\n          <div className='month_chart'>\r\n            <select className='navigation_chart' value={valueMonth} onChange={(event) => setvalueMonth(event.target.value)}>\r\n              {chartNavMonth}\r\n            </select>\r\n          </div>\r\n          <div className='year_chart'>\r\n            <select className='navigation_chart' value={valueYear} onChange={(event) => setvalueYear(event.target.value)}>\r\n              {chartNavYear}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='line_chart_market_price' >\r\n        <ResponsiveContainer>\r\n          <LineChart data={dataChart}>\r\n            <Line dataKey='priceUsd' type='monotone' stroke='#018FFF' strokeWidth={3} dot={{ strokeWidth: 5 }} />\r\n            <YAxis dataKey='priceUsd' type='number' domain={[0, 'dataMax + 20000']} tickCount={10} axisLine={false} tickLine={false} />\r\n            <XAxis dataKey='dayChart' padding={{ left: 40, right: 40 }} axisLine={false} tickLine={false} />\r\n            <Brush startIndex={0} endIndex={9} travellerWidth={1} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartLineMarketPrice","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadDataCoins, loadDataCourseHistory } from '../redux/actions'\r\nimport './OverViewContent.css'\r\nimport { day, month, date } from '../untility/Consts'\r\nimport CoinsContent from './coinsContent/CoinsContent'\r\nimport Users from '../json/userBalance.json'\r\nimport RecentNews from './recentNews/RecentNews'\r\nimport ChartDonutBalance from '../Charts/ChartDonutBalance'\r\nimport ChartLineSpending from '../Charts/ChartLineSpending'\r\nimport ChartLineMarketPrice from '../Charts/ChartLineMarketPrice'\r\n\r\nfunction OverViewContent() {\r\n\r\n  const dataCoinsChart = useSelector(state => {\r\n    const { loadDataCoinsReducer } = state;\r\n    return loadDataCoinsReducer.dataCoins;\r\n  })\r\n\r\n  const dataCoinsCourseHistory = useSelector(state => {\r\n    const { loadDataCoinsCourseHistoryReducer } = state;\r\n    return loadDataCoinsCourseHistoryReducer.dataCoinsHistory;\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDataCoins());\r\n    dispatch(loadDataCourseHistory());\r\n  }, [])\r\n\r\n  return (\r\n    <div className='wrapper_overview_balance_coins'>\r\n      <div className='wrapper_overview_information'>\r\n        <div className='wrapper_overview_datefolder'>\r\n          <h2>Overview</h2>\r\n          <p name='dateFolder'>{date.getDate() + ' ' + month[date.getMonth()] + ', ' + day[date.getDay()]}</p>\r\n        </div>\r\n        <button type='submit' className='btn_add_widget'>Add Widget</button>\r\n      </div>\r\n      <div className='balance_spendings_coins'>\r\n        <div className='wrapper_balance'>\r\n          <h3>Balance</h3>\r\n          <div className='wrapper_donut_chart'>\r\n            <ChartDonutBalance Users={Users} dataCoinsChart={dataCoinsChart} />\r\n          </div>\r\n        </div>\r\n        <div className='wrapper_spending'>\r\n          <div className='wrapper_spending_content'>\r\n            <h3>Spending</h3>\r\n            <a href='/' className='month'>Month</a>\r\n          </div>\r\n          <ChartLineSpending />\r\n        </div>\r\n        <CoinsContent Users={Users} dataCoinsChart={dataCoinsChart} />\r\n      </div>\r\n      <div className='wrapper_market_news'>\r\n        <ChartLineMarketPrice dataCoinsCourseHistory={dataCoinsCourseHistory} />\r\n        <div className='wrapper_recent_news'>\r\n          <div className='wrapper-recent_news_top'>\r\n            <h2>Recent News</h2>\r\n            <hr />\r\n          </div>\r\n          <div className='wrapper_news'>\r\n            <RecentNews />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OverViewContent","import {\r\n    LOAD_DATA_COINS,\r\n    LOAD_DATA_COINS_COURSE_HISTORY\r\n} from \"./types\";\r\n\r\n\r\nexport function loadDataCoins() {\r\n    return async dispatch => {\r\n        const response = await fetch('https://api.coincap.io/v2/assets/');\r\n        const jsonData = await response.json();\r\n\r\n        dispatch({\r\n            type: LOAD_DATA_COINS,\r\n            data: jsonData.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadDataCourseHistory() {\r\n    return async dispatch => {\r\n        const response = await fetch('https://api.coincap.io/v2/assets/bitcoin/history?interval=d1');\r\n        const jsonData = await response.json();\r\n\r\n        dispatch({\r\n            type: LOAD_DATA_COINS_COURSE_HISTORY,\r\n            data: jsonData.data\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\nimport './App.css';\nimport Menu from './Menu/Menu'\nimport { menuItem } from './untility/Consts'\nimport MessagesIcon from './img/messagesIcon.svg'\nimport NotificationIcon from './img/notificationIcon.svg'\nimport OverViewContent from './overViewContent/OverViewContent';\nimport WalletsContent from './walletsContent/walletsContent'\n\nfunction App() {\n\n    const [open, setOpen] = useState(false)\n    const handleOnClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <div className='wrapper_container'>\n            <header className={`${open ? 'active' : ''}`}>\n                <h1>valuet</h1>\n                <hr />\n                <div className='wrapper_menu'>\n                    <nav className='menu_body'>\n                        <Menu menuItem={menuItem} />\n                    </nav>\n                    <hr />\n                </div>\n                <div className='wrapper_person'>\n                    <div className='wrapper_person_profile'>\n                        <div className='person_circle'></div>\n                        <p>Mike Jakson</p>\n                    </div>\n                    <div className='wrapper_log_out'>\n                        <svg width='17' height='16' viewBox='0 0 17 16' fill='none' xmlns='http://www.w3.org/2000/svg'>\n                            <path d='M7.30965 11.2L8.55409 12.4444L12.9985 8L8.55409 3.55556L7.30965 4.8L9.62076 7.11111H0.998535V8.88889H9.57631L7.30965 11.2ZM15.2208 0H2.77631C1.79854 0 0.998535 0.8 0.998535 1.77778V5.33333H2.77631V1.77778H15.2208V14.2222H2.77631V10.6667H0.998535V14.2222C0.998535 15.2 1.79854 16 2.77631 16H15.2208C16.1985 16 16.9985 15.2 16.9985 14.2222V1.77778C16.9985 0.8 16.1985 0 15.2208 0Z' />\n                        </svg>\n                        <a href='# ' className='log_out'>Log Out</a>\n                    </div>\n                </div>\n            </header>\n            <section className='wrapper_content_top'>\n                <div className='search_message_notification'>\n                    <form action='' method='GET'>\n                        <input type='search' placeholder='Search' className='search' />\n                        <button type='submit' className='btn_search'></button>\n                    </form>\n                    <div className='wrapper_notifications'>\n                        <img src={MessagesIcon} alt='' />\n                        <img src={NotificationIcon} alt='' />\n                        <div onClick={handleOnClick} className={`menu_burger ${open ? 'active' : ''}`}>\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n            </section>\n            <section className='wrapper_content_center'>\n                <OverViewContent />\n                {/* <WalletsContent /> */}\n            </section>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk\n  )\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}